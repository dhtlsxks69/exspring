<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespce 값으로 현재 mapper 파일을 나타내는 ID 같은 고유값을 부여 -->
<!-- 보통 이 파일에 정의된 SQL문을 실행시킬 Dao 인터페이스의 (패키지 포함)전체이름으로 지정 -->
<mapper namespace="kr.ac.hit.myapp.member.MemberDao">
	<!-- 객체의 속성(변수명)과 데이터베이스 테이블의 컬럼명을 매치시키는 정보 -->
<!--     <resultMap type="MemberVo" id="memberMap"> -->
<!-- 		mem_id 컬럼의 값을 MemberVo 객체의 memId 변수(속성)에 저장하라는 의미 -->
<!--         <id property="memId" column="mem_id" /> -->
<!--         <result property="memPass" column="mem_pass" /> -->
<!--         <result property="memName" column="mem_name" /> -->
<!--         <result property="memPoint" column="mem_point" /> -->
<!--     </resultMap> -->
    
	<!-- 실행할 SQL문의 종류와 일치하는 태그(엘리먼트)를 사용하는 SQL문을 등록 -->
	<!-- id 값으로 이 SQL문을 나타내는 고유한 값을 지정 -->
	<!-- 보통 이 SQL문을 실행할 Dao 인터페이스의 메서드 이름과 동일하게 설정 -->
	<!-- parameterType SQL문을 실행하기 위해서 인자로 받아올 데이터의 타입을 지정 -->
	<insert id="insert" parameterType="MemberVo">
		INSERT 
		INTO member( mem_id, mem_pass, mem_name, mem_point, mem_img)
		VALUES ( #{memId}, #{memPass}, #{memName}, #{memPoint}, #{memImg})
	</insert>
	<!-- #{xxx}로 파라미터로 맏은 객체의 xxx 속성(변수)값을 SQL 내에 사용 가능 -->
 	
	  <!-- 다수의 SQL문에서 공통적으로 사용할 부분을 별도의 sql 엘리먼트로 선언하고 -->
	  <!-- 필요한 곳에서 include 를 사용하여 포함시켜서 사용 -->
      <sql id="searchSql">
          <!-- trim 내부에 내용이 있는 경우에만 앞에 WHERE를 붙인다 -->
          <!-- 내용의 시작이 AND 또는 OR 인 경우, AND 또는 OR를 제거 -->
          <trim prefix="WHERE" prefixOverrides="AND|OR">
		  <!-- #{searchType} 값이 'title' 이면 들어갈 내용이 SQL문에 포함된다 -->
          <if test="searchType == 'Id' or searchType == 'total'">
              mem_id like concat('%', #{searchWord}, '%')
          </if>
          <!-- #{searchType} 값이 'content' 이면 들어갈 내용이 SQL문에 포함된다 -->
          <if test="searchType == 'name' or searchType == 'total'">              
              OR mem_name like concat('%', #{searchWord}, '%')
       	  </if>
          </trim>
      </sql>
 	
	<!-- memberMap이라는 resultMap에 정의된 대로 컬럼값을 자바 객체의 변수(속성)에 담으라는 의미 -->
	<!-- <select id="selectList" resultMap="memberMap"> -->
	<select id="selectList" resultType="MemberVo">
 	    SELECT mem_id, mem_name, mem_point
 	    FROM member
 	    <include refid="searchSql" />
 	    ORDER BY mem_id
        LIMIT #{firstRecordIndex}, #{size}
 	</select>
 	
	<select id="select" parameterType="string" resultType="MemberVo">
 	    SELECT mem_id, mem_name, mem_point, mem_img
 	    FROM member
 	    WHERE mem_id = #{memId}
 	</select>
 	
	<select id="selectCount" resultType="int">
	    SELECT count(*)
        FROM member
		<!-- id가 "searchSql" sql 엘리먼트의 내용을 이곳에 추가 -->
        <include refid="searchSql" />
    </select>
	
	<update id="update" parameterType="MemberVo">
 	    UPDATE member
 	    SET mem_name = #{memName}, mem_point =#{memPoint}
 	    WHERE mem_id = #{memId} 
 	</update>
	
	<delete id="delete" parameterType="MemberVo">
	    DELETE
	    FROM member
	    WHERE mem_id = #{memId}
	</delete>
	
	<select id="selectLoginUser" parameterType="MemberVo" resultType="MemberVo">
	    SELECT mem_id, mem_name, mem_point
	    FROM member
	    WHERE mem_id = #{memId} AND mem_pass = #{memPass}
	</select>
	
</mapper>